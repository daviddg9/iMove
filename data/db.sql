CREATE DATABASE IMOVE;
USE IMOVE;

-- ///////////////////////////////////////////////////////////////////////////
-- //                                 RENFE                                 //
-- ///////////////////////////////////////////////////////////////////////////

CREATE TABLE RENFE_ROUTES(
    ROUTE_ID		    VARCHAR(10),
    ROUTE_SHORT_NAME	VARCHAR(4),
    ROUTE_LONG_NAME 	VARCHAR(125),
    ROUTE_TYPE          VARCHAR(2),
    ROUTE_COLOR			VARCHAR(7),
    ROUTE_TEXT_COLOR    VARCHAR(7),
    
    PRIMARY KEY (ROUTE_ID)
);

CREATE TABLE RENFE_STOPS(
    STOP_ID		VARCHAR(5),
    STOP_NAME	VARCHAR(50),
    STOP_LAT	VARCHAR(25),
    STOP_LON	VARCHAR(25),
    
    PRIMARY KEY (STOP_ID)
);

CREATE TABLE RENFE_STOP_ROUTES(
    STOP_ID		VARCHAR(5),
    ROUTE_ID	VARCHAR(10),

    CONSTRAINT FK_RENFE_STOP_ROUTES_STOP_ID FOREIGN KEY (STOP_ID) REFERENCES RENFE_STOPS(STOP_ID),
    CONSTRAINT FK_RENFE_STOP_ROUTES_ROUTE_ID FOREIGN KEY (ROUTE_ID) REFERENCES RENFE_ROUTES(ROUTE_ID)
);

CREATE TABLE RENFE_CALENDAR(
    SERVICE_ID      VARCHAR(10),
    MONDAY          VARCHAR(1),
    TUESDAY         VARCHAR(1),
    WEDNESDAY       VARCHAR(1),
    THURSDAY        VARCHAR(1),
    FRIDAY          VARCHAR(1),
    SATURDAY        VARCHAR(1),
    SUNDAY          VARCHAR(1),
    START_DATE      VARCHAR(8),
    END_DATE        VARCHAR(8),

    PRIMARY KEY(SERVICE_ID)
);

CREATE TABLE RENFE_TRIPS(
    TRIP_ID			VARCHAR(15),
    ROUTE_ID		VARCHAR(10),
    SERVICE_ID		VARCHAR(5),
    
    PRIMARY KEY (TRIP_ID),
    CONSTRAINT FK_RENFE_TRIPS_ROUTE_ID FOREIGN KEY (ROUTE_ID) REFERENCES RENFE_ROUTES(ROUTE_ID),
    CONSTRAINT FK_RENFE_TRIPS_SERVICE_ID FOREIGN KEY (SERVICE_ID) REFERENCES RENFE_CALENDAR(SERVICE_ID)
);

CREATE TABLE RENFE_STOP_TIMES(
    TRIP_ID 		VARCHAR(15),
    STOP_ID 		VARCHAR(5),
    ARRIVAL_TIME 	TIME,
    DEPARTURE_TIME 	TIME,
    STOP_SEQUENCE	INT,
    
    CONSTRAINT FK_RENFE_STOP_TIMES_TRIP_ID FOREIGN KEY (TRIP_ID) REFERENCES RENFE_TRIPS(TRIP_ID),
    CONSTRAINT FK_RENFE_STOP_TIMES_STOP_ID FOREIGN KEY (STOP_ID) REFERENCES RENFE_STOPS(STOP_ID)
);

/*
SELECT RENFE_STOPS.STOP_ID, RENFE_STOPS.STOP_NAME, RENFE_ROUTES.ROUTE_ID, RENFE_ROUTES.ROUTE_SHORT_NAME, RENFE_ROUTES. ROUTE_LONG_NAME FROM RENFE_ROUTES
INNER JOIN RENFE_TRIPS ON RENFE_ROUTES.ROUTE_ID = RENFE_TRIPS.ROUTE_ID
INNER JOIN RENFE_STOP_TIMES ON RENFE_TRIPS.TRIP_ID = RENFE_STOP_TIMES.TRIP_ID
INNER JOIN RENFE_STOPS ON RENFE_STOP_TIMES.STOP_ID = RENFE_STOPS.STOP_ID
WHERE RENFE_STOPS.STOP_ID = '18000'
GROUP BY RENFE_ROUTES.ROUTE_ID
SORT BY RENFE_ROUTES.ROUTE_ID;
*/

/* BORRAR PARADAS NO MADRILEÃ‘AS
DELETE FROM RENFE_STOPS 
WHERE STOP_ID NOT IN (
    SELECT RENFE_STOP_TIMES.STOP_ID FROM RENFE_STOP_TIMES 
    INNER JOIN RENFE_TRIPS ON RENFE_STOP_TIMES.TRIP_ID = RENFE_TRIPS.TRIP_ID 
    INNER JOIN RENFE_ROUTES ON RENFE_TRIPS.ROUTE_ID = RENFE_ROUTES.ROUTE_ID    
);
*/

-- ///////////////////////////////////////////////////////////////////////////
-- //                                 METRO                                 //
-- ///////////////////////////////////////////////////////////////////////////


CREATE TABLE METRO_ROUTES(
    ROUTE_ID            VARCHAR(20),
    AGENCY_ID		    VARCHAR(4),
    ROUTE_SHORT_NAME	VARCHAR(4),
    ROUTE_LONG_NAME 	VARCHAR(125),
    ROUTE_TYPE          VARCHAR(2),
    ROUTE_URL           VARCHAR(50),
    ROUTE_COLOR			VARCHAR(7),
    ROUTE_TEXT_COLOR    VARCHAR(7),
    
    PRIMARY KEY (ROUTE_ID)
);

CREATE TABLE METRO_STOPS(
    STOP_ID		        VARCHAR(20),
    STOP_CODE           VARCHAR(4),
    STOP_NAME	        VARCHAR(100),
    STOP_DESC           VARCHAR(100),
    STOP_LAT	        VARCHAR(25),
    STOP_LON	        VARCHAR(25),
    ZONE_ID             VARCHAR(3),
    STOP_URL            VARCHAR(50),
    LOCATION_TYPE       VARCHAR(3),
    PARENT_STATION      VARCHAR(10),
    STOP_TIMEZONE       VARCHAR(20),
    WHEELCHAIR_BOARDING VARCHAR(1),
    
    PRIMARY KEY (STOP_ID)
);

CREATE TABLE METRO_STOP_ROUTES(
    STOP_ID		VARCHAR(20),
    ROUTE_ID	VARCHAR(20),

    CONSTRAINT FK_METRO_STOP_ROUTES_STOP_ID FOREIGN KEY (STOP_ID) REFERENCES METRO_STOPS(STOP_ID),
    CONSTRAINT FK_METRO_STOP_ROUTES_ROUTE_ID FOREIGN KEY (ROUTE_ID) REFERENCES METRO_ROUTES(ROUTE_ID)
);

CREATE TABLE METRO_CALENDAR(
    SERVICE_ID      VARCHAR(25),
    MONDAY          VARCHAR(1),
    TUESDAY         VARCHAR(1),
    WEDNESDAY       VARCHAR(1),
    THURSDAY        VARCHAR(1),
    FRIDAY          VARCHAR(1),
    SATURDAY        VARCHAR(1),
    SUNDAY          VARCHAR(1),

    PRIMARY KEY(SERVICE_ID)
);

CREATE TABLE METRO_TRIPS(
    TRIP_ID			        VARCHAR(40),
    ROUTE_ID		        VARCHAR(20),
    SERVICE_ID		        VARCHAR(30),
    TRIP_HEADSIGN           VARCHAR(50),
    TRIP_SHORT_NAME         VARCHAR(50),
    DIRECTION_ID            VARCHAR(3),
    BLOCK_ID                VARCHAR(3),
    SHAPE_ID                VARCHAR(20),
    WHEELCHAIR_ACCESSIBLE   VARCHAR(1),
    
    PRIMARY KEY (TRIP_ID),
    CONSTRAINT FK_METRO_TRIPS_ROUTE_ID FOREIGN KEY (ROUTE_ID) REFERENCES METRO_ROUTES(ROUTE_ID),
    CONSTRAINT FK_METRO_TRIPS_SERVICE_ID FOREIGN KEY (SERVICE_ID) REFERENCES METRO_CALENDAR(SERVICE_ID)
);

CREATE TABLE METRO_STOP_TIMES(
    TRIP_ID 		VARCHAR(40),
    STOP_ID 		VARCHAR(20),
    ARRIVAL_TIME 	TIME,
    DEPARTURE_TIME 	TIME,
    STOP_SEQUENCE	INT,
    
    CONSTRAINT FK_METRO_STOP_TIMES_TRIP_ID FOREIGN KEY (TRIP_ID) REFERENCES METRO_TRIPS(TRIP_ID),
    CONSTRAINT FK_METRO_STOP_TIMES_STOP_ID FOREIGN KEY (STOP_ID) REFERENCES METRO_STOPS(STOP_ID)
);

CREATE TABLE METRO_FREQUENCIES(
    TRIP_ID 		VARCHAR(40),
    START_TIME 	    TIME,
    END_TIME 	    TIME,
    HEADWAY_SECS	INT,
    
    CONSTRAINT FK_METRO_FREQUENCIES_TRIP_ID FOREIGN KEY (TRIP_ID) REFERENCES METRO_TRIPS(TRIP_ID)
);